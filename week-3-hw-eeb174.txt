QUESTION 1
	1.  61 times the levels of individual 3 was recorded
		command: cut -f 1 Gesquiere2011_data.csv |grep -c -w 3
		this cuts the first column which is the men ID and grep takes and counts the number the ID3 was recorded.

		5 times the levels of individual 27 was recorded 
		command: cut -f 1 Gesquiere2011_data.csv |grep -c -w 27
	
	2. first we write a script using gedit and save it as a .sh in the scrept folder: 
	 	 #! /bin/bash
		cut -f 1 $1 | grep -c -w $2
		this will cut the first column which is the male ID (variable 1), and then grep -c -w will count the number of records which would be variable 2. using grep --w is needed to not grep for example ID of 77 when $1 is 7. 
	    	to give execute permission we can run:    chmod u+x week-3-hw.sh 
	3. script :
		#! /bin/bash
		menID=$(tail -n +2 Gesquiere2011_data.csv | cut -f 1 | sort -n | uniq)
		for ID in $menID
		do
 			number=$(cut -f 1 Gesquiere2011_data.csv |grep -c -w $ID)
 			echo "ID $ID was $number times sampled"
		done
		first we want the first column which is the menID to be sorted numerically, also we use uniq to not have duplicates. then for this column we use a loop count each id. 
		(to give execute permission we can run:    chmod u+x)
QUESTION 2
	1. script :
		#! /bin/bash
		echo "name of the file:"
		echo $1
		echo "rows:"
		wc -l < ~/Desktop/eeb-177/CSB/unix/data/Saavedra2013/$1 
		echo "column"
		head -n 1 ~/Desktop/eeb-177/CSB/unix/data/Saavedra2013/$1 | tr -d '\s' | tr -d '\n' | wc -c
		first we just type the name of the file, then we count the rows by wc -l for the variable 1 which is the file. then for counting the column we can only look at the first row, and remove spaces and then count the number of columns. 

	2.  script:
			#! /bin/bash
			for filename in ~/Desktop/eeb-177/CSB/unix/data/Saavedra2013/*.txt
			do
 				row= `cat $filename | wc -l`
 				column= `head -n 1 $filename | tr -d ' ' |tr -d '\n' | wc -c`
 				echo $filename row=$row column=$column
			done 
			*.txt will take all the files in the Saavedra2013 folder. we can use loop to find the number of rows and columns using the same command as previous question. 
	3. we can use the output of the previous script and sort them to find the largest number of rows and columns.
		bash saavedra2.sh | sort -n -r -k 2 | head -n 1	
		bash saavedra2.sh | sort -n -r -k 3 | head -n 1
		(column 2 is the number of rows and 3 is the columns)
		n58.txt 678 90 ( the largest number of rows)
		n56.txt 110 207( the largest number of columns)
